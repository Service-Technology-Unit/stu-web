<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:encryption="http://www.jasypt.org/schema/encryption"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.jasypt.org/schema/encryption http://www.jasypt.org/schema/encryption/jasypt-spring31-encryption-1.xsd">

	<encryption:encryptor-config id="encryptorConf" password-env-name="ENCRYPTION_PASSWORD" algorithm-env-name="ENCRYPTION_ALGORITHM" />
	<encryption:string-encryptor id="stringEncryptor" config-bean="encryptorConf" /> 

	<encryption:encryptable-property-placeholder
		encryptor="stringEncryptor"
		location="classpath*:spring.properties,classpath*:local-server.properties" />

	<context:component-scan base-package="edu.ucdavis.ucdh.stu.stu.resources,edu.ucdavis.ucdh.stu.stu.jaxb" />

	<util:map id="buildInfo" map-class="java.util.HashMap">
		<!-- entry key="artifactId" value="${build.artifactId}" />
		<entry key="version" value="${build.version}" />
		<entry key="timestamp" value="${build.timestamp}" / -->
	</util:map>

	<bean id="ldapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url" value="${ad.ldap.url}" />
		<property name="base" value="${ad.ldap.base}" />
		<property name="authenticationSource" ref="authenticationSource" />
		<property name="pooled" value="false" />
		<property name="baseEnvironmentProperties">
			<map>
				<entry key="com.sun.jndi.ldap.connect.timeout" value="500" />
				<entry key="java.naming.referral" value="follow" />
			</map>
		</property>
	</bean>

	<bean id="authenticationSource" class="org.springframework.ldap.authentication.DefaultValuesAuthenticationSourceDecorator">
		<property name="target" ref="springSecurityAuthenticationSource" />
		<property name="defaultUser" value="${ad.ldap.username}" />
		<property name="defaultPassword" value="${ad.ldap.password}" />
	</bean>

	<bean id="springSecurityAuthenticationSource" class="org.springframework.security.ldap.authentication.SpringSecurityAuthenticationSource">
	</bean>

	<bean id="activeDirectory" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg ref="ldapContextSource" />
	</bean>

	<bean id="cardKeyDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${card.key.jdbc.driver}"/>
		<property name="url" value="${card.key.database.url}"/>
		<property name="username" value="${card.key.database.username}"/>
		<property name="password" value="${card.key.database.password}"/>
		<property name="maxTotal" value="60"/>
		<property name="maxIdle" value="20"/>
		<property name="maxWaitMillis" value="2000"/>
		<property name="defaultAutoCommit" value="true"/>
	</bean>

	<bean id="masterDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/masterdata"/>
		<property name="lookupOnStartup" value="false"/>
		<property name="cache" value="true"/>
		<property name="proxyInterface" value="javax.sql.DataSource"/>
	</bean>

	<bean id="photoTechnicalErrorImage" class="java.lang.String">
		<constructor-arg value="${util.photo.technical.error.image.url}" />
	</bean>

	<bean id="photoNotAuthorizedImage" class="java.lang.String">
		<constructor-arg value="${util.photo.not.authorized.image.url}" />
	</bean>

	<bean id="photoNotFoundImage" class="java.lang.String">
		<constructor-arg value="${util.photo.not.found.image.url}" />
	</bean>

	<bean id="photoPermissionWithheldImage" class="java.lang.String">
		<constructor-arg value="${util.photo.permission.withheld.image.url}" />
	</bean>

	<bean id="technicalErrorImage" class="java.lang.String">
		<constructor-arg value="${util.technical.error.image.url}" />
	</bean>

	<bean id="notAuthorizedImage" class="java.lang.String">
		<constructor-arg value="${util.not.authorized.image.url}" />
	</bean>

	<bean id="notFoundImage" class="java.lang.String">
		<constructor-arg value="${util.not.found.image.url}" />
	</bean>

	<bean id="permissionWithheldImage" class="java.lang.String">
		<constructor-arg value="${util.permission.withheld.image.url}" />
	</bean>

	<bean id="maxLoginLength" class="java.lang.String">
		<constructor-arg value="${util.max.ad.login.length}" />
	</bean>

	<bean id="personPublisherId" class="java.lang.String">
		<constructor-arg value="${util.sm.person.publisher.id}" />
	</bean>

	<bean id="verifyIdFlag" class="java.lang.Boolean">
		<constructor-arg value="${verify.id}" />
	</bean>

	<bean id="authorizedIpList" class="java.lang.String">
		<constructor-arg value="${card.key.authorized.ip.list}" />
	</bean>

	<bean id="snWebServiceEndPoint" class="java.lang.String">
		<constructor-arg value="${sn.web.service.end.point}" />
	</bean>

	<bean id="snWebServiceAccount" class="java.lang.String">
		<constructor-arg value="${sn.web.service.account}" />
	</bean>

	<bean id="snWebServiceCredentials" class="java.lang.String">
		<constructor-arg value="${sn.web.service.credentials}" />
	</bean>

	<bean id="groupServiceURL" class="java.lang.String">
		<constructor-arg value="${ad.group.url}" />
	</bean>

	<bean id="groupServiceUser" class="java.lang.String">
		<constructor-arg value="${ad.group.username}" />
	</bean>

	<bean id="groupServicePassword" class="java.lang.String">
		<constructor-arg value="${ad.group.password}" />
	</bean>

	<bean id="groupServiceIpList" class="java.lang.String">
		<constructor-arg value="${ad.group.authorized.ip.list}" />
	</bean>

	<bean id="groupServiceUserFilterList" class="java.lang.String">
		<constructor-arg value="${ad.group.base.user.filter.list}" />
	</bean>

	<bean id="groupServiceGroupFilterList" class="java.lang.String">
		<constructor-arg value="${ad.group.base.group.filter.list}" />
	</bean>

	<bean id="serviceNowServer" class="java.lang.String">
		<constructor-arg value="${servicenow.server}" />
	</bean>

	<bean id="serviceNowUser" class="java.lang.String">
		<constructor-arg value="${servicenow.username}" />
	</bean>

	<bean id="serviceNowPassword" class="java.lang.String">
		<constructor-arg value="${servicenow.password}" />
	</bean>

	<bean id="contactManager" class="edu.ucdavis.ucdh.stu.stu.manager.ContactManager">
		<property name="eventService"       ref="eventService" />
		<property name="serviceNowServer"   ref="serviceNowServer" />
		<property name="serviceNowUser"     ref="serviceNowUser" />
		<property name="serviceNowPassword" ref="serviceNowPassword" />
	</bean>

	<bean id="jaxbContextResolver" class="edu.ucdavis.ucdh.stu.stu.jaxb.JaxbContextResolver" scope="singleton">
		<constructor-arg value="${util.path.to.xsl}" />
		<constructor-arg value="edu.ucdavis.ucdh.stu.stu.beans" />
	</bean>
	
	<bean id="up2dateService" class="edu.ucdavis.ucdh.stu.up2date.service.Up2DateService">
		<constructor-arg value="${up2date.service.url}"></constructor-arg>
	</bean>

	<bean id="eventService" class="edu.ucdavis.ucdh.stu.snutil.util.EventService">
		<constructor-arg value="${servicenow.server}" />
		<constructor-arg value="${servicenow.username}" />
		<constructor-arg value="${servicenow.password}" />
	</bean>
	
	<bean id="personUpdatePoster" class="edu.ucdavis.ucdh.stu.stu.utils.PersonUpdatePoster">
		<constructor-arg ref="up2dateService"></constructor-arg>
		<constructor-arg ref="masterDataSource"></constructor-arg>
		<constructor-arg ref="personPublisherId"></constructor-arg>
	</bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${sm.jdbc.driver}"/>
        <property name="url" value="${sm.database.url}"/>
        <property name="username" value="${sm.database.username}"/>
        <property name="password" value="${sm.database.password}"/>
        <property name="maxTotal" value="60"/>
        <property name="maxIdle" value="20"/>
        <property name="maxWaitMillis" value="2000"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

	<bean id="badgeDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${badge.jdbc.driver}" />
		<property name="url" value="${badge.database.url}" />
		<property name="username" value="${badge.database.username}" />
		<property name="password" value="${badge.database.password}" />
		<property name="maxTotal" value="30" />
		<property name="maxIdle" value="10" />
		<property name="maxWaitMillis" value="1000" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<bean id="portraitDataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${photo.jdbc.driver}" />
		<property name="url" value="${photo.database.url}" />
		<property name="username" value="${photo.database.username}" />
		<property name="password" value="${photo.database.password}" />
		<property name="maxTotal" value="30" />
		<property name="maxIdle" value="10" />
		<property name="maxWaitMillis" value="1000" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<bean id="utilDataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${util.jdbc.driver}" />
		<property name="url" value="${util.database.url}" />
		<property name="username" value="${util.database.username}" />
		<property name="password" value="${util.database.password}" />
		<property name="maxTotal" value="30" />
		<property name="maxIdle" value="10" />
		<property name="maxWaitMillis" value="1000" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

</beans>